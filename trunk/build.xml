<?xml version="1.0"?>
<project name="schema2svn" default="update" basedir="." >
    <path id="runtime.classpath">
        <fileset dir="./lib">
            <include name="*.jar"/>
        </fileset>
    </path>
    <target name="compile">
        <mkdir dir="./tmp"/>
        <javac classpathref="runtime.classpath" srcdir="./src" destdir="./tmp"/>
    </target>
    <target name="jar" depends="compile">
        <jar basedir="./tmp" file="./lib/schema2svn.jar"/>
    </target>
    <target name="update" depends="jar" >

        <!--<property name="instance.path" value="."/> -->

        <property file="build-my.properties"/>

        <echo>Generating scripts to ${instance.path}</echo>

        <tstamp>
            <format property="timestamp" pattern="yyyy.MM.dd.HH.mm.ss.SSS"/>
        </tstamp>
        
        <!-- determining last query time to check if there were some modifications... -->
        <!--<property name="timestamp" value="2001.01.01.00.00.00.000"/>-->
        <echo>Last svn revision...</echo>
        <exec executable="svn"
              dir="${instance.path}"
              vmlauncher="false">
            <arg value="up"/>
            </exec>
        <exec executable="svn"
              dir="${instance.path}"
              vmlauncher="false"
              outputproperty="last.commit.info">
            <arg value="log"/>
            <arg value="--limit"/>
            <arg value="1"/>
            </exec>
        <delete  file="commit.info.txt"/>
        <copyfile src="commit.info.template.txt" dest="commit.info.txt"/>
        <replace file="commit.info.txt" token="$$$" value="${last.commit.info}"/>
        <replaceregexp file="commit.info.txt" match="[\s\S]*(\d{4}\.(\d{2}\.){5}\d{3})[\s\S]*" replace="\1"/>
        <echo>${last.commit.info}</echo>
        <loadfile srcfile="commit.info.txt" property="last.ddl.timestamp"/>
        <!--<fail />-->

        <echo>DB check as of ${last.ddl.timestamp}</echo>
        
        <java classname="com.itci.Schema2svn" classpath="./lib/ojdbc14.jar;./lib/schema2svn.jar"
              resultproperty="result"
              errorproperty="schema2svn.error"
              outputproperty="schema2svn.output"
                >
            <arg value="${db.url}"/>
            <arg value="${instance.path}"/>
            <arg value="-d${last.ddl.timestamp}"/>
            <!--<arg value="-sBGM_COMMON"/>-->
            <arg value="-s${schemas}"/>
        </java>
        <echo>=====================================================================================</echo>
        <echo>execution result: ${result}</echo>
        <echo>${schema2svn.error}</echo>
        <echo>${schema2svn.output}</echo>
        <!--<fail unless="${result}" message="Something wrong with database ${schema2svn.error}"/>-->
        <copyfile src="commit.info.template.txt" dest="commit.info.txt"/>
        <replace file="commit.info.txt" token="$$$" value="${schema2svn.output}"/>
        <replaceregexp file="commit.info.txt" match="[\s\S]*(\d{4}\.(\d{2}\.){5}\d{3})[\s\S]*" replace="\1"/>
        <loadfile srcfile="commit.info.txt" property="timestamp"/>
        <echo>Last ddl modified at ${timestamp}</echo>

        <exec executable="svn"
              dir="${instance.path}"
              vmlauncher="false">
            <arg value="add"/>
            <arg value="*"/>
            </exec>

        <exec executable="svn"
              dir="${instance.path}"
              vmlauncher="false"
              outputproperty="svn.status">
            <arg value="status"/>
            </exec>

        <echo>${svn.status}</echo>
        
        <!--<fail/>-->
        <exec executable="svn"
              dir="${instance.path}"
              vmlauncher="false"
              outputproperty="svn.status">
            <arg value="status"/>
            </exec>

        <exec executable="svn"
              dir="${instance.path}"
              vmlauncher="false"
              outputproperty="commit.info">
            <arg value="ci"/>
            <arg value="."/>
            <arg value="-m${timestamp}"/>
            </exec>

        <echo>${commit.info}</echo>

    </target>
</project>